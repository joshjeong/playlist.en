<div id = "room_page">

  <div class = "top_half">

    <div class = "signout">
      <a href = "/signout"> Bounce </a>
    </div>

    <!-- "https://www.youtube.com/v/M7lc1UVf-VE?controls=0&rel=0&showinfo=0&autohide=1&version=3" -->

    <% if @host == true %>
    <div class = "start_youtube">
    </div>

    <div id="player"></div>
    <% end %>

    <div id = "hide_sidbar">
      <div id = "sidebar">

        <%@playlist_videos.each do |video| %>
        <%video_info = @client.video_by(video.video_id) %>
        <%thumbnail_url = video_info.thumbnails.first.url %>
        <%title = video_info.title %>
        <div class = "queue_container">
          <div class = "sidebar_thumbnail">
            <img src = "<%= thumbnail_url %>" class = "youtube_thumbnail">
          </div>
          <div class = "queue_right">
            <div class = "queue_title"> <%= title %></div> 
            <br>
          </div>
        </div>
        <% end %>
        <div class="add_queue">
        </div>
      </div>
    </div>




  </div>

  <div class = "bottom_half gradient">
    <h3>Room Name: <%= @room_name %></h3>
    <br>

    <div id = "search_container">
      <form action= "/search" method = "post" id = "search">
        <img id = "mag_glass" src = "http://www.9zap.com/wp-content/uploads/2010/08/329.jpg">
        <input  type="text" id = "search_field"name = "search" placeholder="Search YouTube" autocomplete="off" required>
      </form>
    </div>
    <div class ="search_area">
      <div class = "result_container">
      </div>
    </div>
  </div>
</div>

<script>
  //Load player api asynchronously.
  var tag = document.createElement('script');
  tag.src = "https://www.youtube.com/iframe_api";
  var firstScriptTag = document.getElementsByTagName('script')[0];
  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
  var done = false;
  window.player;

  function onYouTubeIframeAPIReady() {
    window.player = new YT.Player('player', {
      height: '100%',
      width: '100%',
      videoId: "<%= @video_id %>",
      playerVars:
      {
        controls: 1,
        showinfo: 0,
        autoplay: 1
      },
      events: {
        'onReady': onReady,
        'onStateChange': onStateChange
      }
    });    
  }

  function onReady() {
    window.player.addEventListener('onStateChange', function(e) {
      var firstVideo = true;
      // console.log('State is:', e.data);
      if ( e.data == 0) {
          window.player.destroy();
        $.ajax({
          url: '/playlist',
          type: 'post',
          data: {firstVideo: true}
        }).done( function(song) {
          window.player = null
          if (song) {
            playNextSong(song["queue"]);
          }

        })
      }
    });
  }
    // function onPlayerReady(evt) {
    //     evt.target.playVideo();
    // }
    // function onPlayerStateChange(evt) {
        // if (evt.data == YT.PlayerState.PLAYING && !done) {
        //     setTimeout(stopVideo, 6000);
        //     done = true;
        // }
    // }
    // }

    function onStateChange(newState) {
      if ( newState == 0 ) {
      // console.log("onStateChange");
      /* load next video */
      // window.player.destroy();
      // window.player = null
      // console.log('after destroy');
      // playNextSong();
      // console.log('hey')
    }
  }


  //  if (evt.data == YT.PlayerState.ENDED) {
  //    function nextVideo({
  //      player.nextVideo()
  //    })
  // }
  // function stopVideo() {
  //     player.stopVideo();
  // }
  </script>
